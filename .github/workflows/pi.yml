# This workflow makes a 64 bit Raspberry Pi Arch Linux Image.
# It does not have the security issues mentioned here: https://github.com/tendermint/tendermint/blob/master/docs/tendermint-core/running-in-production.md#validator-signing-on-32-bit-architectures-or-arm
# Later, more devices will be supported, as well.
# The "base" is built by: https://github.com/faddat/sos
# The base image is located at: https://hub.docker.com/r/faddat/spos
# TODO: Replace this with a system that fetches SOS-light, loop-mounts the image, modifies hostname, adds docker compose run, and exits.

name: Rpi
on: [push, pull_request]

jobs:
  pi:
    name: polynetworkcosmos Pi
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes --credential yes

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Image in Docker
        run: docker buildx build --tag polynetworkcosmos --file .pi/Dockerfile --platform linux/arm64 --cache-from ${{ secrets.DOCKERHUB_USERNAME }}/polynetworkcosmos:picache --cache-to ${{ secrets.DOCKERHUB_USERNAME }}/polynetworkcosmos:picache --load --progress tty .

      - name: Build Image
        run: bash .pi/build.sh

      - name: Compress
        run: xz -T $(nproc) images/polynetworkcosmos.img

      - name: Upload image
        uses: actions/upload-artifact@v2
        with:
          name: Starport Pi
          path: images/polynetworkcosmos.img.xz
