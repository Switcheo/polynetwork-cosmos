syntax = "proto3";
package Switcheo.carbon.ccm;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "Switcheo/carbon/ccm/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/Switcheo/polynetwork-cosmos/x/ccm/types";

// Query defines the gRPC querier service.
service Query {
  // this line is used by starport scaffolding # 2
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/carbon/cdp/v1/params";
  }
  rpc CheckModuleContract(QueryCheckModuleContractRequest)
      returns (QueryCheckModuleContractResponse) {
    option (google.api.http).get =
        "/carbon/ccm/v1/check_module_contract/{module_name}/"
        "{to_contract_address}/{from_chain_id}";
  }
}

// this line is used by starport scaffolding # 3
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryCheckModuleContractRequest {
  option (gogoproto.goproto_getters) = false;

  string module_name = 1;
  bytes to_contract_address = 2;
  uint64 from_chain_id = 3;
}

message QueryCheckModuleContractResponse {
  option (gogoproto.goproto_getters) = false;

  string module_name = 1;
  bool exist = 2;
}
