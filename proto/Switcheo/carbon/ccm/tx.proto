syntax = "proto3";
package Switcheo.carbon.ccm;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "Switcheo/carbon/ccm/params.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/Switcheo/polynetwork-cosmos/x/ccm/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  // this line is used by starport scaffolding # proto/tx/rpc
  rpc Process(MsgProcessCrossChainTx) returns (MsgProcessCrossChainTxResponse);
  rpc ProcessZion(MsgProcessZionCrossChainTx)
      returns (MsgProcessZionCrossChainTxResponse);
  rpc ProcessToggleEmitZionEvents(MsgToggleEmitZionEvents)
      returns (MsgProcessCrossChainTxResponse);
  // UpdateParams defines a governance operation for updating the module
  // parameters. The authority is hard-coded to the x/gov module account.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgProcessCrossChainTx {
  option (cosmos.msg.v1.signer) = "submitter";
  option (gogoproto.goproto_getters) = false;

  string submitter = 1;
  uint64 from_chain_id = 2;
  string proof = 3;
  string header = 4;
  string header_proof = 5;
  string current_header = 6;
}

message MsgProcessZionCrossChainTx {
  option (cosmos.msg.v1.signer) = "submitter";
  option (gogoproto.goproto_getters) = false;

  string submitter = 1;
  uint64 from_chain_id = 2;
  string proof = 3;
  string header = 4;
  string raw_cross_tx = 5;
}

message MsgProcessCrossChainTxResponse {}
message MsgProcessZionCrossChainTxResponse {}

// MsgCreateEmitEvent was removed, but leaving this as legacy record
message MsgCreateEmitEvent {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  uint64 to_chain_id = 2;
  uint64 cross_chain_id = 3;
}

message MsgToggleEmitZionEvents {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  bool toggle_to = 2;
}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the optional parameters to update.
  ParamsToUpdate params = 2 [ (gogoproto.nullable) = false ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}
